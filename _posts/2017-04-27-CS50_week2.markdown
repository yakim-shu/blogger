---
layout: post
title: "【心得】CS50 - week 2"
description: ""
category: CS50
image: http://i.imgur.com/ag930Yh.png
tags: [CS50]
---

Week 2 主要課程素材 : 

- [課程視頻](https://video.cs50.net/2016/fall/lectures/2){:target="_blank"}
- [課程文檔](http://docs.cs50.net/2016/fall/notes/2/week2.html){:target="_blank"}
- [作業](http://docs.cs50.net/2017/x/psets/2/pset2.html){:target="_blank"}

助教課程：

- [陳述式 - functions](https://www.youtube.com/embed/jtuMIHebSu8?autoplay=1&rel=0)
- [變數及作用範圍 - Variables and Scope](https://www.youtube.com/embed/pBqyy8NwzqY?autoplay=1&rel=0)
- [陣列 - Arrays](https://www.youtube.com/embed/7EdaoE46BTI?autoplay=1&rel=0)
- [命令列引數 - Command Line Arguments](https://www.youtube.com/embed/eDI5Wqjq2a0?autoplay=1&rel=0)
- [神奇的數字 - Magic Numbers](https://www.youtube.com/embed/z_Nh9yt4d_s?autoplay=1&rel=0)

---


## 加密

這節開始談到如何加密一段文字。

最簡單的加密方法就是給一段**原始資料**，透過神秘的**key(金鑰)**，組成一段難以閱讀的**新資料**。

![加密](http://i.imgur.com/KLyoxPR.png)

反過來說，你拿到一段加密後的資料，只要有正確的金鑰，就可以還原成原始資料。

在做簡單加密之前，我們先完成一系列小任務：

- 印出一個字串
- 印出此字串裡的每個字母
- 把每個字母轉換成 ascii 碼
- 對 ascii 碼做某種運算
- 把 ascii 碼轉換回字母

---

### 印出字串

現在來試著加密一個單詞，首先印出原始字串。

寫一段簡單的程式，讓使用者輸入一個詞，並印出來。

假如我輸入 ``yakim``，印出 ``hello, yakim``

```c
#include <cs50.h>
#include <stdio.h>

int main(void)
{
    string s = get_string();
    printf("hello, %s\n", s);
}
```

---

### 印出此字串裡的每個字母

接著我們把字串拆開來看，分成一個一個字符：``y``、``a``、``k``、``i``、``m``

```c
#include <cs50.h>
#include <string.h>
#include <stdio.h>

int main(void)
{
    string s = get_string();
    for (int i=0; i<strlen(s); i++) // 註(1)
    {
        printf("%c\n", s[i]); // 註(2)
    }
}
```

> (1)： strlen → string.h 的函數，會回傳字串的長度。  
> (2)： s[i] → 把字串當成一個陣列，列出第 i 個字符。


---

### 轉換 ASCII

好玩的部分來了，還記的 [week 0 提到的 ASCII](CS50_week0.html) 嗎?

現在把字母轉成 ASCII ，再進行某種算式，接著再轉換回字母。

登愣!!!簡單加密就完成了~~

![ASCII](http://i.imgur.com/d7sie6T.png)

參照上圖，可以看到  
**065 - 090 → 是大寫的 A ~ Z**  
**097 - 122 → 是小寫的 a ~ z**

---

來印出 大寫 A ~ Z 的數字對照表

```c
#include <stdio.h>

int main(void)
{
    for (int i = 65; i< 65 + 26; i++)
    {
        printf("%c is %i\n", i, i);
    }
}
// 結果：
// A is 65
// B is 66
// C is 67
// ....

```

還可以更神奇的用字元來做 for loop，兩邊結果是一樣的。

```c
#include <stdio.h>

int main(void)
{
    for (char c = 'A'; c <= 'Z'; c++)
    {
        printf("%c is %i\n", c, c);
    }
}
// 結果：
// A is 65
// B is 66
// C is 67
// ....
```

---

### 小練習：小寫轉大寫

寫一個小程式，讓使用者輸入的單字轉為大寫

```c
#include <cs50.h>
#include <ctype.h>
#include <string.h>
#include <stdio.h>

int main(void)
{
    string s = get_string();
    if (s != NULL)
    {
        for (int i = 0, n = strlen(s); i < n; i++)
        {
            if (s[i] >= 'a' || s[i] <= 'z')
            {
                // 3種寫法都一樣
                // 1. printf("%c", s[i] - 32);
                // 2. printf("%c", s[i] - ('a' - 'A'));
                // 3.
                printf("%c", toupper(s[i]));
            }
            else
            {
                printf("%c", s[i]);
            }
        }
    }
}
```

或者，不需要用if else判斷，直接全部轉大寫即可

```c
#include <cs50.h>
#include <ctype.h>
#include <string.h>
#include <stdio.h>

int main(void)
{
    string s = get_string();
    if (s != NULL)
    {
        for (int i = 0, n = strlen(s); i < n; i++)
        {
            printf("%c", toupper(s[i]));
        }
    }
}
```

---

### 了解字串

字串的本質是由**字元**所組成的**陣列**。

假設有一個 32 byte 的記憶體位置，放入一個 ``Zamyla`` 的字串。

![Zamyla](http://i.imgur.com/oNmzdt8.png)

假如再加入另一個的字串 ``Andi``，那電腦要如何得知這它們之間的斷點呢?

所以在結束一個字串後，會自動加上 **``\0``** 的字元，當做此字串的結束。

![Zamyla&Andi](http://i.imgur.com/ag930Yh.png)

那知道了字串後面都會帶有 ``\0`` 能做到什麼勒~

還記得剛剛計算字串長度的 ``strlen`` 函式嗎?

我們可以把剛剛的練習改寫得更簡單!!

```c
#include <cs50.h>
#include <ctype.h>
#include <stdio.h>

int main(void)
{
    string s = get_string();
    int n = 0;
    while (s[n] != '\0')
    {
        printf("%c", toupper(s[n]));
        n++;
    }
}
```

看以上程式，我甚至不用調用 ``strlen`` 來取出字串長度，只要判斷它還沒讀到 **``\0``**就持續印出。

---


## 作業

### initials.c

#### 說明
- 使用者隨意輸入一英文名字
- 輸出首字大寫

#### 範例

![initials.c](http://i.imgur.com/1idCiDE.png)

#### 解題

```c
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <cs50.h>
#include <string.h>

int main()
{
    string name = GetString();
    int counter = strlen(name);
    int n = 0;
    int nUpper = 0;
    char c;
    // 遍歷所有字元
    while( n < counter)
    {
        if ( n == nUpper ){
            c = toupper(name[n]); // 轉大寫
            printf("%c", c);
        }
        else if ( name[n] == ' ' ) // 當遇到空白鍵，向後算一位
        {
            nUpper = n+1;
        }
        n++;
    }
    printf("\n");
}
```

---

### caesar.c

#### 說明

加密文字

#### 步驟

- 輸入一字串及一數字
- 換成ascii碼，再加上剛輸入的數字
- 輸出成加密文字

#### 解題

```c
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <cs50.h>
#include <string.h>


int main(int argc, string argv[])
{

    
    if ( !(argc==2) )
    {
        printf("We require an integer as encryption key.\n");
        return 1;
    }
    else
    {
        // 把第2個參數字串轉成數字
        int iNum = atoi(argv[1]);
        
        printf("plaintext: ");
        string name = GetString();
        
        int sLen = strlen(name);
        char sChar[sLen];
        printf("ciphertext: ");
        
        for (int i=0; i<sLen; i++)
        {
            sChar[i] = name[i]; 
            if (iNum > 26)
            {
                iNum = iNum % 26;
            }
            if ( isupper(sChar[i]) && (sChar[i]+iNum) > 90) // 大寫超過
            {
                printf("%c", sChar[i]+iNum-26);
            }
            else if ( islower(sChar[i]) && (sChar[i]+iNum) > 122) // 小寫超過
            {
                printf("%c", sChar[i]+iNum-26);
            }
            else if ( sChar[i]+iNum < 65 || sChar[i]+iNum > 122 ) // 非字母
            {
                printf("%c", sChar[i]);
            }
            else
            {
                printf("%c", sChar[i]+iNum);
            }
        }
        printf("\n");
    }
}
```
